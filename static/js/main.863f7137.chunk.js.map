{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","components/Header.js","components/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["Square","props","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","className","handleClick","Header","Fragment","Navbar","dark","expand","NavbarBrand","href","Jumbotron","src","height","width","alt","Footer","target","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.863f7137.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props){\r\n    return(\r\n        <button onClick={props.onClick}>\r\n          {props.value}\r\n        </button>\r\n    );\r\n}\r\n  \r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends React.Component{    \r\n\r\n    renderSquare(i){\r\n      return(\r\n        <Square \r\n          value={this.props.squares[i]}\r\n          onClick={() => this.props.onClick(i)} \r\n        />\r\n      );\r\n    }\r\n  \r\n    render(){\r\n        return(\r\n        <div>\r\n          <div>\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div>\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div>\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Board;","import React from 'react';\r\nimport Board from './Board'; \r\n\r\nclass Game extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          history: [{\r\n            squares: Array(9).fill(null),\r\n          }],\r\n          stepNumber : 0,\r\n          xIsNext : true,\r\n        };\r\n    }\r\n\r\n    handleClick(i){\r\n        const history = this.state.history.slice(0,this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if(calculateWinner(squares) || squares[i]){\r\n          return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n          history : history.concat([{ \r\n          squares:squares\r\n          }]),\r\n          stepNumber : history.length,\r\n          xIsNext : !this.state.xIsNext\r\n      });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n          stepNumber: step,\r\n          xIsNext: (step % 2) === 0\r\n        });\r\n    }    \r\n\r\n    render(){\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n\r\n      const moves = history.map((step,move) => {\r\n          const desc = move ? 'Go to move #' + move : 'Go to game start';\r\n          return (\r\n              <li key={move}>\r\n                  <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n              </li>\r\n          );\r\n      });\r\n\r\n      let status; \r\n      if(winner){\r\n          status = 'Winner: ' + winner;\r\n      } else {\r\n          status =  'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n      return(\r\n        <div className=\"container\">\r\n          <div className=\"row align-items-start row-content\">\r\n            <div className=\"col-5 col-md\">\r\n              {status}\r\n            </div>\r\n            <div className=\"col-7 col-md\">\r\n              <Board\r\n                squares = {current.squares}\r\n                onClick = {(i) => this.handleClick(i)} \r\n              />    \r\n            </div>\r\n            <div className=\"col-12 col-sm-12 col-md\">\r\n              {moves}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  export default Game;\r\n  ","import React from 'react';\r\nimport { Navbar, NavbarBrand, Jumbotron} from 'reactstrap';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <h4 className=\"text-center\">Tic-Tac-Toe</h4>\r\n                    </NavbarBrand>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-2\">\r\n                            <NavbarBrand className=\"mr\" href=\"/\">\r\n                                <img src=\"./images/1.png\" height=\"80\" width=\"80\"\r\n                                    alt=\"0x0\" />\r\n                            </NavbarBrand>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Tic-Tac-Toe</h1>\r\n                            <p>Enjoy this wonderful game with your partner</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row \">             \r\n                    <div className=\"col-7 offset-1 col-sm-6 align-self-center\">\r\n                        <address>\r\n                        <h5 className=\"\"> Sheshan Patel</h5>\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +647-540-2989<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"patelsheshan0@gmail.com\">patelsheshan0@gmail.com</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-4 col-sm-5 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"https://www.linkedin.com/in/sheshanpatel23/\" target=\"_blank\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-github\" href=\"https://github.com/sheshan23/Tic-Tac-Toe\" target=\"_blank\"><i className=\"fa fa-github\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto col-md-auto\">\r\n                        <br/><p>© Copyright 2018 Tic-Tac-Toe Inc.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Game from './components/Game';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div>\n      <Header/>   \n      <Game/>     \n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}